"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[1247],{743:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/terminal1-4d90a9e1a2bcac41745884fed457da00.png"},1500:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/otp_sha_3-eabfa303081d12c314f5a7425332b6d2.png"},2012:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/terminal2-736115af9858e8d039f812dee371adb5.png"},4969:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/phone1-61bd28667eec23f2ac3993e4580491e2.png"},5977:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/sha3-03bdf03bcdbdda36c8dc5d68a823373b.png"},7350:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/sha4-676d69c4f35af3ba7ead8d0f6c454ad5.png"},7479:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/xcode_infotab_url_type_values-191048f96d6487bc535ce0516f07025c.png"},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}},8899:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/otp_sha_4-42ec9b54429041282c25dc92520b1745.png"},9157:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"flutter/how-to-enable-firebase-phone-authentication-otp","title":"How to enable Firebase Phone Authentication(OTP)","description":"How to enable Firebase Phone Authentication(OTP)","source":"@site/docs/flutter/how-to-enable-firebase-phone-authentication-otp.md","sourceDirName":"flutter","slug":"/flutter/how-to-enable-firebase-phone-authentication-otp","permalink":"/my-docs/docs/flutter/how-to-enable-firebase-phone-authentication-otp","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"How to enable Firebase Phone Authentication(OTP)"},"sidebar":"docs","previous":{"title":"How to Create firebase project","permalink":"/my-docs/docs/flutter/how-to-create-firebase-project"},"next":{"title":"How to Change default country code for OTP","permalink":"/my-docs/docs/flutter/how-to-change-default-country-code-for-otp"}}');var i=t(4848),s=t(8453);const a={title:"How to enable Firebase Phone Authentication(OTP)"},r=void 0,l={},d=[{value:"How to enable Firebase Phone Authentication(OTP)",id:"how-to-enable-firebase-phone-authenticationotp",level:2},{value:"1. In Firebase Console, go to Authentication &gt; Sign-in method, enable Phone sign-in, and click Save.",id:"1-in-firebase-console-go-to-authentication--sign-in-method-enable-phone-sign-in-and-click-save",level:3},{value:"2. To add SHA1 and SHA256 keys in Firebase, go to the <strong>android</strong> folder, right-click the <strong>gradlew</strong> file, and select <strong>&quot;Open in Terminal&quot;</strong> as shown in the image below.",id:"2-to-add-sha1-and-sha256-keys-in-firebase-go-to-the-android-folder-right-click-the-gradlew-file-and-select-open-in-terminal-as-shown-in-the-image-below",level:3},{value:"3. In the terminal view, run <code>gradlew signingReport</code> (on <strong>Windows</strong>), or <code>./gradlew signingReport</code> (on <strong>Mac/Linux</strong>) as shown below.",id:"3-in-the-terminal-view-run-gradlew-signingreport-on-windows-or-gradlew-signingreport-on-maclinux-as-shown-below",level:3},{value:"4. Now take debug sha and sha256 will print copy that and add it in firebase console. And also add sha-256 to firebase console.",id:"4-now-take-debug-sha-and-sha256-will-print-copy-that-and-add-it-in-firebase-console-and-also-add-sha-256-to-firebase-console",level:3},{value:"5. Alternatively, you can get the <strong>release SHA</strong> using the command line:",id:"5-alternatively-you-can-get-the-release-sha-using-the-command-line",level:3},{value:"6. For ios you need to set following.",id:"6-for-ios-you-need-to-set-following",level:3}];function h(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"how-to-enable-firebase-phone-authenticationotp",children:"How to enable Firebase Phone Authentication(OTP)"}),"\n",(0,i.jsx)(n.h3,{id:"1-in-firebase-console-go-to-authentication--sign-in-method-enable-phone-sign-in-and-click-save",children:"1. In Firebase Console, go to Authentication > Sign-in method, enable Phone sign-in, and click Save."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"eShop",src:t(4969).A+"",width:"3835",height:"1751"})}),"\n",(0,i.jsxs)(n.h3,{id:"2-to-add-sha1-and-sha256-keys-in-firebase-go-to-the-android-folder-right-click-the-gradlew-file-and-select-open-in-terminal-as-shown-in-the-image-below",children:["2. To add SHA1 and SHA256 keys in Firebase, go to the ",(0,i.jsx)(n.strong,{children:"android"})," folder, right-click the ",(0,i.jsx)(n.strong,{children:"gradlew"})," file, and select ",(0,i.jsx)(n.strong,{children:'"Open in Terminal"'})," as shown in the image below."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"eShop",src:t(743).A+"",width:"1734",height:"1037"})}),"\n",(0,i.jsxs)(n.h3,{id:"3-in-the-terminal-view-run-gradlew-signingreport-on-windows-or-gradlew-signingreport-on-maclinux-as-shown-below",children:["3. In the terminal view, run ",(0,i.jsx)(n.code,{children:"gradlew signingReport"})," (on ",(0,i.jsx)(n.strong,{children:"Windows"}),"), or ",(0,i.jsx)(n.code,{children:"./gradlew signingReport"})," (on ",(0,i.jsx)(n.strong,{children:"Mac/Linux"}),") as shown below."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"eShop",src:t(2012).A+"",width:"1905",height:"951"})}),"\n",(0,i.jsx)(n.h3,{id:"4-now-take-debug-sha-and-sha256-will-print-copy-that-and-add-it-in-firebase-console-and-also-add-sha-256-to-firebase-console",children:"4. Now take debug sha and sha256 will print copy that and add it in firebase console. And also add sha-256 to firebase console."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"eShop",src:t(5977).A+"",width:"1881",height:"879"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Remember:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When releasing the APK, you must add the ",(0,i.jsx)(n.strong,{children:"release SHA1"})," in the Firebase console; otherwise, ",(0,i.jsx)(n.strong,{children:"OTP verification won't work"}),". After release, you can get the SHA1 from the ",(0,i.jsx)(n.strong,{children:"Play Console"})," under the ",(0,i.jsx)(n.strong,{children:"App Integrity"})," section."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{alt:"eShop",src:t(1500).A+"",width:"1783",height:"1104"}),"\n",(0,i.jsx)(n.img,{alt:"eShop",src:t(8899).A+"",width:"1783",height:"1104"})]}),"\n",(0,i.jsxs)(n.h3,{id:"5-alternatively-you-can-get-the-release-sha-using-the-command-line",children:["5. Alternatively, you can get the ",(0,i.jsx)(n.strong,{children:"release SHA"})," using the command line:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Open ",(0,i.jsx)(n.strong,{children:"Run"}),", type ",(0,i.jsx)(n.code,{children:"cmd"}),", and press Enter."]}),"\n",(0,i.jsxs)(n.li,{children:["Navigate to the ",(0,i.jsxs)(n.strong,{children:["Java JDK ",(0,i.jsx)(n.code,{children:"bin"})," path"]})," in the terminal."]}),"\n",(0,i.jsxs)(n.li,{children:["Run the following command (replace the keystore path and alias):","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'keytool -list -v -keystore "D:\\keystore\\eShop.jks" -alias eShop\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Enter the keystore password when prompted \u2014 it will display your ",(0,i.jsx)(n.strong,{children:"release SHA1"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"eShop",src:t(7350).A+"",width:"1899",height:"578"})}),"\n",(0,i.jsx)(n.h3,{id:"6-for-ios-you-need-to-set-following",children:"6. For ios you need to set following."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Add custom URL schemes to your Xcode project:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Open your project configuration: double-click the project name in the left tree view. Select your app from the TARGETS section, then select the Info tab, and expand the URL Types section."}),"\n",(0,i.jsx)(n.li,{children:"Click the + button, and add a URL scheme for your reversed client ID. To find this value, open the GoogleService-Info.plist configuration file, and look for the REVERSED_CLIENT_ID key. Copy the value of that key, and paste it into the URL Schemes box on the configuration page. Leave the other fields blank."}),"\n",(0,i.jsx)(n.li,{children:"When completed, your config should look something similar to the following (but with your application-specific values):"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"eShop",src:t(7479).A+"",width:"860",height:"214"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);